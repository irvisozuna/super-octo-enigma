<template>
  <VCard>
    <VCardTitle>{{ $t('delete ') }}</VCardTitle>
    <VCardText>
      <p>{{ $t('Are you sure you want to delete') }}<strong>{{ itemData?.id }}</strong>?</p>
    </VCardText>
    <VCardActions>
      <VSpacer />
      <VBtn color="error" @click="deleteItem">{{ $t('delete') }}</VBtn>
      <VBtn color="secondary" @click="close">{{ $t('cancel') }}</VBtn>
    </VCardActions>
  </VCard>
</template>

<script setup lang="ts">
import { useAppManager } from '@/composables/useAppManager';
import { use{{moduleName}}Store } from '@/modules/{{moduleNameLower}}/stores/{{moduleNameLower}}Store';
import { ref } from 'vue';
import { {{moduleName}} } from '../types/{{moduleNameLower}}';
const { closeDialog } = useAppManager();

const isOpen = ref(false);
const item = ref<{{moduleName}}>({
  id: ''
});
// Props del diálogo
const props = defineProps({
  item: {
    type: Object as () => {{moduleName}},
    required: true,
  },
});
const {{moduleNameLower}}Store = use{{moduleName}}Store();
const itemData = ref<{{moduleName}}>({ ...props.item });

// Método para cerrar el diálogo
function close() {
  closeDialog();
}

async function deleteItem() {
  try {
    if (item.value?.id) {
      await {{moduleNameLower}}Store.deleteItem(item.value.id);
      close();
    }
  } catch (error) {
    console.error(`Error deleting {{moduleNameLower}}:`, error);
  } finally {
    close();
  }
}

</script>
