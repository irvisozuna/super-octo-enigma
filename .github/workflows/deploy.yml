name: ðŸš€ Deploy a Servidor JAPAMA con pnpm

on:
  push:
    branches:
      - japama  # Se ejecuta solo cuando hagas push a esta rama

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ›  Clonar el repositorio
        uses: actions/checkout@v3

      - name: ðŸ“¦ Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          # Omitimos cache: 'pnpm' para no intentar usar pnpm antes de tenerlo instalado

      - name: Instalar pnpm globalmente
        run: npm install -g pnpm

      - name: ðŸ“¥ Instalar dependencias con pnpm
        run: pnpm install

      - name: Crear .env.production
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL_JAPAMA }}
          VITE_GOOGLE_MAPS_API_KEY: ${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}
          VITE_MAPBOX_KEY: ${{ secrets.VITE_MAPBOX_KEY }}
          VITE_API_ORGANIZATION: 'japama'
        run: |
          echo "VITE_API_BASE_URL=$VITE_API_BASE_URL" >> .env.production
          echo "VITE_GOOGLE_MAPS_API_KEY=$VITE_GOOGLE_MAPS_API_KEY" >> .env.production
          echo "VITE_MAPBOX_KEY=$VITE_MAPBOX_KEY" >> .env.production
          echo "VITE_API_ORGANIZATION=$VITE_API_ORGANIZATION" >> .env.production

      - name: ðŸ”¨ Construir el proyecto con pnpm
        run: pnpm run build

      - name: ðŸ“¤ Subir archivos al servidor
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "dist/*"
          target: "/var/www/html/atencion"

      - name: ðŸ”„ Reiniciar Servidor (Opcional)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Despliegue completado usando pnpm"
